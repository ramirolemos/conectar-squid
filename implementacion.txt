# Implementacion Squid Version 1.0


                                 Instructivo para Implementacion Squid





1 - Introduccion:

 Este Instructivo pretende estandarizar una configuracion minima y necesaria del proxy-cache Squid. Algunos procesos 
 Como por ejemplo copiar un archivo a la maquina de servicios en el Sitema Operativo Debian o cambiar a superusuario 
 (root) desde una consola tanto en Ubuntu como en Debian, fueron explicados en el Instructivo de implementacion del 
 firewall .
 


2 - Implementacion


2.1.a  - Creacion de directorios de trabajo.

         Antes que nada para comenzar la configuracion vamos estandarizar nuestros directorios de trabajo
         que van a estar alojados en /vol/share para Debian, y en /var/share en Ubuntu, dado que de estos 
         directorios son dejados de lado en el back up.
         Luego: 
         
             Si poseemos el sistema operativo Debian ejecutamos el siguiente comando como root en la maqui
             na de servicios:
             
             ~#mkdir -p /vol/share/cache/squid 
     
            
             Si poseemos el sistema operativo Ubuntu ejecutamos el siguiente comando como root:
     
             ~#mkdir -p /var/share/cache/squid 
     
2.1.b - Cambio de propietario de directorios de trabajo.    
        
         Squid escribe con el usuario proxy que pertenece al grupo proxy, por lo tanto tambien tenemos que
         cambiar el propietario y grupo de quien va a poder escribir, ejecutar y leer los archivos que esten den
         tro de nuestro directorio de trabajo.
         
            
             Si poseemos el sistema operativo Debian ejecutamos el siguiente comando como root en la maqui
             na de servicios:

             ~#chown -R proxy:proxy /vol/share/cache/squid 
      
             Si poseemos el sistema operativo Ubuntu ejecutamos el siguiente comando como root:
      
             ~#chown -R proxy:proxy /var/share/cache/squid 

2.1.c - Cambio de permisos de directorios de trabajo.

          Squid necesita permisos de ejecucion,lectura y escritura tanto para su propietario como para el grupo,
          luego vamos a asignarles los permisos necesarios para todos los archivos que se vayan a encon-
          trar alojados en el directorio de trabajo:
          

             Si poseemos el sistema operativo Debian ejecutamos el siguiente comando como root en la maqui
             na de servicios:
            
             ~#chmod 770 -R /vol/share/cache/squid 
            
             Si poseemos el sistema operativo Ubuntu ejecutamos el siguiente comando como root:
            
             ~#chmod 770 -R /var/share/cache/squid 
            
2.2.a - Back up archivo configuracion actual.

          Paso muy importante es realizar SIEMPRE un back up de la configuracion que se encuentra funcional.
          No solamente en este caso , sino en cualquier caso que se vaya a cambiar la configuracion de un 
          servicio.
          
             
             Tanto en Debian (siendo root en la maquina de servicio), como en Ubuntu (siendo root), ejecutamos:

             ~#mv /etc/squid/squid.conf /etc/squid/squid.org.conf


2.2.b - Moviendo squid.conf descargado al directorio de configuracion de Squid.

         Ahora vamos a copiar el archivo de configuracion descargado al directorio de configuracion de Squid.
         Nos situamos en el directorio donde esta alojado el archivo de configuracion descargado y tanto en 
         Debian como en Ubuntu siendo root ejecutamos.

             
             ~#mv squid.conf /etc/squid/squid.conf


2.3.a - Deteniendo Squid
         
         Vamos a detener el servicio de squid, para poder generar luego el directorio de trabajo.
         

             Si poseemos el sistema operativo Debian ejecutamos el siguiente comando como root en la maqui
             na de servicios:
           
             ~#service squid stop 
           
             Si poseemos el sistema operativo Ubuntu ejecutamos el siguiente comando como root:
           
             ~#etc/init.d/squid stop 


2.3.b - Rengenerando arbol de directorios para el alojamiento de archivos.

         Para que Squid organice los archivos que va a utilizar vamos a tener que generar el arbol de direc
         torios luego:
          
             Tanto en Debian como en Ubuntu siendo root ejecutamos:

             ~#squid -z



2.3.c - Iniciando Squid
          
          Iniciamos nuevamente squid para poder finalizar nuestra implementacion
          
            Si poseemos el sistema operativo Debian ejecutamos el siguiente comando como root en la maqui
            na de servicios:
          
          
            ~#service squid start 
        
        
        
            Si poseemos el sistema operativo Ubuntu ejecutamos como root:
        
            
            ~#/etc/init.d/squid start 



3.1.a - Chequeando funcionamiento de Squid.
          
         Para saber squid esta ejecutado o no ejecutamos 
          
            Si poseemos el sistema operativo Debian ejecutamos el siguiente comando como root en la maqui
            na de servicios:
           
            ~#service squid status  
           
           
            Si poseemos el sistema operativo Ubuntu ejecutamos como root:
           
           
            ~#/etc/init.d/squid status
            
            
            Luego si estos comandos nos devuelve
            
            [ ok ] squid is running.
            
            Quiere decir que nuestro servicio de squid fue ejecutado con exito.
            
            
3.1.b - Acceso a log squid 

           Para leer el archivo de log de squid , quiere decir al informe de acceso que estan teniendo los 
           clientes de nuestra red al proxy y si este le esta devolviendo el objeto desde el cache o bien 
           le esta yendo a "buscar" hacia Internet ejecutamos tanto el Ubuntu como Debian como root:
           
           ~#tail -f /var/log/squid/access.log 
           
           Para mayor informacion se puede dirigir a  http://wiki.squid-cache.org/SquidFaq/SquidLogs
           
       
           
           
3.2.a -  Volver a la configuracion anterior en caso de que haya ocurrido un error en la implementacion.

          Si por alguna razon hubo algun problema a la hora de implementar el archivo de configuracion dado
          el paso 3.1.a nos tiene que devolver un valor diferente al mencionado.
          Si esto asi sucede vamos a restaurar el archivo que hicimos back up en el paso 2.2.a.
          
          Tanto en Debian (siendo root en la maquina de servicio), como en Ubuntu (siendo root), ejecutamos:

             ~#mv /etc/squid/squid.conf.org /etc/squid/squid.conf

          Luego realizamos 
                                                                  
             
            ~#squid -k reconfigure
           
           
            
                                                     
         

                                                                              
                                 

                                                                                                   
 
